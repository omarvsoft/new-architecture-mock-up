<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.evertec.cibp.api</groupId>
	<artifactId>new-architecture-mock-up</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>common-deps</module>
		<module>authentication-services</module>
		<module>customer-services</module>
		<module>config-server</module>
		<module>authorization-server</module>
	</modules>

	<properties>
		<springframework.boot.version>1.4.3.RELEASE</springframework.boot.version>
		<springframework.cloud.version>Camden.SR4</springframework.cloud.version>
		<maven.jacoco.plugin.version>0.7.2.201409121644</maven.jacoco.plugin.version>
		<docker.image.prefix>springio</docker.image.prefix>
		<docker.image.registry>localhost:5000</docker.image.registry>
		<docker.image.user>mi-banco</docker.image.user>
		<docker.spotify.plugin.version>0.4.11</docker.spotify.plugin.version>
		<docker.spotify.plugin.dockerDirectory>src/main/docker</docker.spotify.plugin.dockerDirectory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.finalName>${project.artifactId}-${project.version}</project.build.finalName>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
    	<maven.compiler.target>1.8</maven.compiler.target>
	</properties>


	<dependencies>
		<!-- TEST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- TEST -->
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${springframework.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${springframework.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.build.finalName}</finalName>
		<plugins>
			<!-- spring-boot-maven::plugin[] -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- tag::plugin[] -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<includes>
						<include>**/*IT.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Spotify::plugin[] -->
			<plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.spotify.plugin.version}</version>
                <configuration>
                    <!--Docker naming convention REGISTRY[:PORT]/USER/REPO[:TAG]-->
                    <imageName>${docker.image.registry}/${docker.image.user}/${project.artifactId}</imageName>
                    <dockerDirectory>${docker.spotify.plugin.dockerDirectory}</dockerDirectory>
                    <forceTags>true</forceTags>
                    <imageTags>
                    	<imageTag>${project.version}</imageTag>
                    	<imageTag>latest</imageTag>
                    </imageTags>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <!-- Registry using ~/.docker/config.json file for authentication  Hint: The build will fail, if the config file doesn't exist.-->
					<!-- <useConfigFile>true</useConfigFile> -->
                </configuration>
            </plugin>

		</plugins>
	</build>
	<profiles>
		<profile>
			<id>test-coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${maven.jacoco.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-unit-test-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>generate-unit-test-report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>prepare-integration-test-agent</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>generate-integration-test-report</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>